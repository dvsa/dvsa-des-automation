import checkIfElementExists from '../../../boilerplate/support/lib/checkIfElementExists';
import randomString from '../lib/randomString';
import { getElementByReference } from '../../../helpers/element-reference-helper';

/**
 * Set the value of the given input field to a new value or add a value to the
 * current selector value
 * @param  {String}   method  The method to use (add or set)
 * @param  {Number}   length  Number of Characters to generate
 * @param selector
 */
export default async (method: string, length: number, selector: string) => {
  const elementSelector: string = getElementByReference(selector);
  /**
     * The command to perform on the browser object (addValue or setValue)
     * @type {String}
     */
  const command = (method === 'add') ? 'addValue' : 'setValue';

  const value: string = randomString(length) || '';

  await checkIfElementExists(elementSelector, false, 1);

  await $(getElementByReference(elementSelector))[command](value);
};
